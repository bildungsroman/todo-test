AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWS UGS Todo list
Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 100
    MemorySize: 512
Resources:
  TodoTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  ApiListTodosFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/index.apiGetTodos
      CodeUri: ./backend/dist/bundle.zip
      Tracing: Active
      Policies:
        Statement:
          - Effect: Allow
            Action: dynamodb:Scan
            Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TodoTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TodoTable}/index/*
      Environment:
        Variables:
          TABLE_NAME: !Ref TodoTable
      Events:
        ListDevices:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /todos
            Method: get
  ApiUpdateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/index.apiUpdateTodo
      CodeUri: ./backend/dist/bundle.zip
      Tracing: Active
      Policies:
        Statement:
          - Effect: Allow
            Action: dynamodb:PutItem
            Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TodoTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TodoTable}/index/*
      Environment:
        Variables:
          TABLE_NAME: !Ref TodoTable
      Events:
        ListDevices:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /todos/{id}
            Method: put
  ApiAddTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/index.apiAddTodo
      CodeUri: ./backend/dist/bundle.zip
      Tracing: Active
      Policies:
        Statement:
          - Effect: Allow
            Action: dynamodb:PutItem
            Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TodoTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TodoTable}/index/*
      Environment:
        Variables:
          TABLE_NAME: !Ref TodoTable
      Events:
        ListDevices:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /todos
            Method: post
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        Name: AWS::Include
        Parameters:
          Location: !Sub s3://${AWS::AccountId}-sam-deploy-${AWS::Region}/${AWS::StackName}/swagger.yaml
  WebappBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-webappbucket-${AWS::AccountId}
      WebsiteConfiguration:
        IndexDocument: index.html
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebappBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${WebappBucket}/*
            Principal:
              CanonicalUser: !GetAtt OriginAccessIdentity.S3CanonicalUserId
  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref AWS::StackName
Outputs:
  ApiUrl:
    Description: URL of the API endpoint
    Value: !Sub https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod
  WebappBucket:
    Description: The S3 bucket containing the SPA
    Value: !Ref WebappBucket